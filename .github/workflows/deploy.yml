name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Rollup package
        run: yarn rollup

      - name: Navigate to app folder
        run: cd ./example/demo

      - name: Set PUBLIC_URL environment variable
        run: |
          if [ -z "${{ secrets.GITHUB_PAGES_CUSTOM_DOMAIN }}" ]; then
            echo "PUBLIC_URL=/${{ github.event.repository.name }}" >> $GITHUB_ENV
          else
            echo "PUBLIC_URL=" >> $GITHUB_ENV
          fi

      - name: Build app
        run: yarn install
        working-directory: ./example/demo

      - name: Build app
        run: yarn build
        working-directory: ./example/demo
        env:
          PUBLIC_URL: ${{ env.PUBLIC_URL }}

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ./example/demo/build
          clean: true

      - name: Get version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view "v${{ env.VERSION }}" > /dev/null 2>&1; then
            echo "Release exists"
          else
            echo "CREATE_RELEASE=true" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare release folder
        if: env.CREATE_RELEASE == 'true'
        run: |
          mkdir -p release-package
          cp package.json release-package/
          cp LICENSE release-package/
          cp README.md release-package/
          cp -r dist release-package/

      - name: Deploy to GitHub release branch
        if: env.CREATE_RELEASE == 'true'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: releases
          folder: ./release-package
          clean: true
          commit-message: "Release v${{ env.VERSION }}"

      - name: Create new release if not exists
        if: env.CREATE_RELEASE == 'true'
        run: |
          gh release create "v${{ env.VERSION }}" --title "Release v${{ env.VERSION }}" --notes "New release v${{ env.VERSION }}" --target releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
